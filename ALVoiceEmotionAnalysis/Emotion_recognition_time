#! /usr/bin/env python
# -- encoding: UTF-8 --

import qi
import time
import collections

# Establece la sesión y conecta con el robot
session = qi.Session()
session.connect("tcp://127.0.0.1:9559")

# Inicializa los servicios
emotion_analysis_service = session.service("ALVoiceEmotionAnalysis")
memory_service = session.service("ALMemory")
animated_speech_service = session.service("ALAnimatedSpeech")

# Suscribe al análisis de emoción en la voz
emotion_analysis_service.subscribe("EmocionDeVoz")

# Configuración del tiempo de análisis
DURACION_ANALISIS = 10  # Segundos
inicio = time.time()

# Diccionario para contar emociones detectadas
emociones_detectadas = collections.Counter()

try:
    while time.time() - inicio < DURACION_ANALISIS:
        print("Escuchando emoción en la voz...")
        
        # Obtén el evento `EmotionRecognized` desde ALMemory
        emotion_data = memory_service.getData("ALVoiceEmotionAnalysis/EmotionRecognized")
        
        if emotion_data:
            matched_emotion_index = emotion_data[0][0]  # Índice de la emoción dominante
            matched_emotion_level = emotion_data[0][1]  # Nivel de la emoción dominante
            
            # Almacenar la emoción detectada
            emociones_detectadas[matched_emotion_index] += 1

            # Imprime la emoción detectada y el nivel
            print("Emoción detectada (índice {matched_emotion_index}): Nivel {matched_emotion_level}")

            # Responde en tiempo real según la emoción detectada
            if matched_emotion_index == 3:  # Joy (alegría)
                animated_speech_service.say("¡Parece que estás contento, me alegra!")
            elif matched_emotion_index == 4:  # Sorrow (tristeza)
                animated_speech_service.say("Oh, noto que estás triste. Estoy aquí para apoyarte.")

        # Espera un poco antes de analizar nuevamente
        time.sleep(2)

    # Determinar la emoción predominante
    emocion_predominante = emociones_detectadas.most_common(1)
    if emocion_predominante:
        emocion, cantidad = emocion_predominante[0]
        if emocion == 3:
            mensaje_final = "En general, parecías feliz durante la conversación."
        elif emocion == 4:
            mensaje_final = "En general, parecías triste durante la conversación."
        else:
            mensaje_final = "Detecté varias emociones, pero no hay una predominante clara."
    else:
        mensaje_final = "No pude detectar ninguna emoción en la conversación."

    # Resumen final
    animated_speech_service.say(mensaje_final)
    print("Resumen:", mensaje_final)

except KeyboardInterrupt:
    # Desuscribe en caso de interrupción (CTRL+C)
    emotion_analysis_service.unsubscribe("EmocionDeVoz")
    print("Suscripción finalizada.")

